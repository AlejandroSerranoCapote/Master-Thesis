# -*- coding: utf-8 -*-
"""
Created on Tue Feb 18 16:54:39 2025

@author: Alejandro

850 nm
"""
import numpy as np
import matplotlib.pyplot as plt
# =============================================================================
# ANCHURA guia recta (3)
# =============================================================================
p =[0.6549086038181207,
 0.31489941895947354,
 0.860855017101924,
 0.5760347540349234,
 0.8460002269049072,
 0.6582837233589305,
 0.7876714090088892,
 0.652968802537342,
 0.7245526915592299,
 0.6201315490703326,
 0.7337373153604086,
 0.5802979961184833,
 0.7925366169283202,
 0.5495595655603874,
 0.8120649663726337,
 0.5510772985120764,
 0.8025444644418632,
 0.5783287357936578,
 0.7806298957862909,
 0.6039574591330261]
W0 = np.linspace(1,20,20)

plt.figure()
plt.plot(W0,p,'k--')
plt.plot(W0,p,'b.',markersize=12)
plt.xlabel('Ancho del core ($\\mu m$)',fontsize=15)
plt.ylabel('$P/P_0$',fontsize=20)
plt.grid()
plt.show()
# =============================================================================
# NUMERO TRACKS (4)
# =============================================================================
p = [0.003610434142878218,
 0.12399711207663512,
 0.860855017101924,
 0.9128850630021805,
 0.9147298149713149,
 0.9152203012750976]
n = [1,2,4,6,8,10]

plt.figure()
plt.plot(n,p,'k--')
plt.plot(n,p,'b.',markersize=12)
plt.xlabel('$N_{tracks}$',fontsize=20)
plt.ylabel('$P/P_0$',fontsize=20)
plt.grid()
plt.show()

# =============================================================================
# Distancia entre tracks (2)
# =============================================================================

p = [0.860855017101924,
 0.7616545173503775,
 0.8211644832149914,
 0.704280617558497,
 0.7506639011584899]
d = [2,2.5,3,3.5,4]

plt.figure()
plt.plot(d,p,'k--')
plt.plot(d,p,'b.',markersize=12)
plt.xlabel('Separaci√≥n entre tracks ($\\mu m$)',fontsize=15)
plt.ylabel('$P/P_0$',fontsize=20)
plt.xticks([2,2.5,3,3.5,4])
plt.grid()
plt.show()

# =============================================================================
# DELTA N
# =============================================================================
p = [0.1261519777326565,
 0.4644153563873723,
 0.7328042160730387,
 0.860855017101924,
 0.9183155470575506,
 0.9467438709959548,
 0.962363364790204,
 0.9719388218818957]

dn = np.arange(0.001,0.009,0.001)

plt.figure()
plt.plot(dn,p,'k--')
plt.plot(dn,p,'b.',markersize=12)
plt.xlabel('$\\Delta n$',fontsize=20)
plt.ylabel('$P/P_0$',fontsize=20)
plt.grid()
plt.show()